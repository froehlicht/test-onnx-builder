name: Test ONNX Runtime Builder - Fixed Paths

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-onnx-builder:
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Clone ONNX Runtime Builder
      run: |
        git clone https://github.com/olilarkin/onnxruntime-static-lib-builder.git onnxruntime-builder
        cd onnxruntime-builder
        git submodule update --init --recursive
    
    - name: Setup Python Environment
      run: |
        cd onnxruntime-builder
        python3 -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt
    
    - name: Setup Test Model
      run: |
        cd onnxruntime-builder
        cp ../best.onnx ./
        echo "✅ Model copied: $(ls -lh best.onnx | awk '{print $5}')"
    
    - name: Convert Model to ORT
      run: |
        cd onnxruntime-builder
        source venv/bin/activate
        chmod +x convert-model-to-ort.sh
        ./convert-model-to-ort.sh best.onnx
        echo "=== Conversion Results ==="
        ls -la *.ort *.config *.cpp *.h 2>/dev/null || echo "Some files missing"
    
    - name: Build macOS ARM64 Static Library
      run: |
        cd onnxruntime-builder
        source venv/bin/activate
        chmod +x build-mac.sh
        echo "=== Building ONNX Runtime Static Library ==="
        ./build-mac.sh
    
    - name: Find and Verify Static Libraries
      run: |
        cd onnxruntime-builder
        echo "=== Searching for all static libraries ==="
        find . -name "*.a" -type f | sort
        
        echo "=== Checking specific paths ==="
        # Original expected path
        if [ -f "build/Mac/libonnxruntime_static.a" ]; then
          echo "✅ Found at build/Mac/libonnxruntime_static.a"
          ls -lh build/Mac/libonnxruntime_static.a
          lipo -info build/Mac/libonnxruntime_static.a
        fi
        
        # Alternative paths based on log
        if [ -f "onnxruntime/build/macOS_arm64/MinSizeRel/libonnxruntime_static.a" ]; then
          echo "✅ Found at onnxruntime/build/macOS_arm64/MinSizeRel/libonnxruntime_static.a"
          ls -lh onnxruntime/build/macOS_arm64/MinSizeRel/libonnxruntime_static.a
          lipo -info onnxruntime/build/macOS_arm64/MinSizeRel/libonnxruntime_static.a
        fi
        
        # Search in all build directories
        echo "=== All .a files found ==="
        find . -name "*.a" -exec echo "File: {}" \; -exec ls -lh {} \; -exec lipo -info {} \; 2>/dev/null
    
    - name: Copy to Standard Location
      run: |
        cd onnxruntime-builder
        mkdir -p build/Mac
        
        # Find the actual static library and copy it
        STATIC_LIB=$(find . -name "libonnxruntime_static.a" -type f | head -1)
        if [ -n "$STATIC_LIB" ]; then
          echo "✅ Found static library at: $STATIC_LIB"
          cp "$STATIC_LIB" build/Mac/libonnxruntime_static.a
          echo "✅ Copied to standard location"
          ls -lh build/Mac/libonnxruntime_static.a
          lipo -info build/Mac/libonnxruntime_static.a
        else
          echo "❌ No static library found"
          exit 1
        fi
        
        # Also copy headers if they exist
        if [ -d "onnxruntime/include" ]; then
          cp -r onnxruntime/include build/Mac/
          echo "✅ Headers copied"
        fi
    
    - name: Upload Complete Build Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: onnx-runtime-complete-${{ github.run_number }}
        path: |
          onnxruntime-builder/build/Mac/
          onnxruntime-builder/*.ort
          onnxruntime-builder/*.cpp
          onnxruntime-builder/*.h
          onnxruntime-builder/*.config
        retention-days: 7
    
    - name: Success Summary
      run: |
        cd onnxruntime-builder
        echo "🎉 === BUILD SUCCESS SUMMARY === 🎉"
        echo "Files ready for download:"
        echo "📦 Static Library: $(ls -lh build/Mac/libonnxruntime_static.a | awk '{print $5}')"
        echo "📄 ORT Model: $(ls -lh *.ort | awk '{print $5}')"
        echo "🔧 Config File: $(ls -lh *.config | awk '{print $1 " " $5}')"
        if [ -f "*.cpp" ]; then
          echo "💻 Embedded C++: $(ls -lh *.cpp | awk '{print $5}')"
        fi
        echo "✅ Ready for integration into Motion2MIDI plugin!"
